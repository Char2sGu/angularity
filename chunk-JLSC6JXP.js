import{a as k}from"./chunk-46TJBTHP.js";import{a as d}from"./chunk-IK7FDAWK.js";import"./chunk-73E4PGK3.js";import"./chunk-BEEPLMHP.js";import{a as n}from"./chunk-OIQWCD35.js";import{X as E}from"./chunk-NGRQBGZ3.js";import"./chunk-TKY5DHZR.js";import{Ba as i,Ra as r,U as c,nb as t,ob as p}from"./chunk-2P42YJQL.js";import{a as o,b as l,h as y}from"./chunk-TWZW5B45.js";var F=y(E());var D={category:k,title:"Exceptions",mdFile:"./index.md"},a=D;var h=[];var f={},g=f;var u=`<p class="ngde">In Angularity, JavaScript runtime errors are divided into two categories: Errors and Exceptions.</p><ul class="ngde"><li class="ngde">Exceptions are instances of the <code class="ngde ng-doc-code-with-link"><a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></code> class. They are expected to be caught and appropriately handled.</li><li class="ngde">Errors are all the errors that are not instances of <code class="ngde ng-doc-code-with-link"><a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></code>. They are regarded as critical errors that should never happen and typically breaks the application, such as <code class="ngde">TypeError</code>. The occurrence of such an error implies something is wrong within the application that awaits fixes.</li></ul><p class="ngde">To create a type of exception, declare a class that extends from the <code class="ngde ng-doc-code-with-link"><a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></code> class.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> EntityNotFoundException</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> extends</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> <a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {}</span></span></code></pre><p class="ngde">Additional customizations can apply to add contextual properties or generate uniformed error messages:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> EntityNotFoundException</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> extends</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> <a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  constructor</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    readonly</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> type</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> Type</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde">any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    readonly</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> id</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> string</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ) {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    super</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">\`</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">type</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">name</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> of id </span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">id</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> is not found.\`</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">It is worthy to note that both Exceptions and Errors are instances of <code class="ngde">Error</code>. The way to distinguish them is <code class="ngde ng-doc-code-with-link">instanceof <a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></code>, not <code class="ngde">instanceof Error</code>.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">catch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  const</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde"> isException</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> e </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">instanceof</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> <a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  const</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde"> isError</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> !</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(e </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">instanceof</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> <a href="api/classes/core/Exception" class="ng-doc-code-anchor ngde">Exception</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">A recommended way to compose the catch block is to exhaust all the exceptions that are expected to be caught and re-throw the error if none of the exceptions are matched:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">catch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">instanceof</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> SomeException</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    doSomething</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">else</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">instanceof</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> AnotherException</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    doSomething</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">else</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    throw</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> e</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">All Angularity libraries follow this convention for error handling, and it is recommended to also follow such convention in applications that uses Angularity.</p>`,x=(()=>{class s extends n{constructor(){super(),this.pageType="guide",this.pageContent=u,this.page=a,this.demoAssets=g}static{this.\u0275fac=function(e){return new(e||s)}}static{this.\u0275cmp=c({type:s,selectors:[["ng-doc-page-e7ey3duq"]],standalone:!0,features:[t([{provide:n,useExisting:s},h,a.providers??[]]),i,p],decls:1,vars:0,template:function(e,A){e&1&&r(0,"ng-doc-page")},dependencies:[d],encapsulation:2,changeDetection:0})}}return s})(),m=[l(o({},(0,F.isRoute)(a.route)?a.route:{}),{path:"",component:x,title:"Exceptions"})],I=m;export{x as PageComponent,I as default};
