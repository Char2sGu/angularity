import{a as h}from"./chunk-TJCZVYBH.js";import{a as g}from"./chunk-6ORSQ67G.js";import"./chunk-LAHBPHMM.js";import{a as t}from"./chunk-FHAHQJSK.js";import{L as c,Sa as l,Ta as d,Yb as v,ka as p,xa as r}from"./chunk-EZIACBBL.js";import{a as o,b as i,g as x}from"./chunk-P2VZOJAX.js";var f=x(v());var b={category:h,title:"Breakpoints",mdFile:"./index.md"},s=b;var m=[];var y={},u=y;var j=`<h1 id="breakpoints" class="ngde">Breakpoints<a title="Link to heading" class="ng-doc-header-link ngde" href="/cdk/breakpoints#breakpoints"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">In Angular CDK, the <code class="ngde">BreakpointObserver</code> is especially useful for observing changes in the layout. However, it uses the media query string as the key to index the result of multiple queries, which makes it inconvenient for the developer to tell which breakpoints are activated.</p><p class="ngde">Angularity offers <code class="ngde ng-doc-code-with-link" class="ngde"><a href="/references/cdk-layout/classes/NamedBreakpointObserver" class="ng-doc-code-anchor ngde" data-link-type="Injectable" class="ngde">NamedBreakpointObserver</a></code> as a wrapper of <code class="ngde">BreakpointObserver</code>, which allows you to assign a name for each media query:</p><pre class="ngde hljs"><code class="hljs language-ts code-lines ngde" lang="ts" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-keyword ngde">const</span> observer = <span class="hljs-title function_ ngde">inject</span>(<span class="hljs-title class_ ngde"><a href="/references/cdk-layout/classes/NamedBreakpointObserver" class="ng-doc-code-anchor ngde" data-link-type="Injectable" class="ngde">NamedBreakpointObserver</a></span>);
</span><span class="line ngde">observer
</span><span class="line ngde">  .<span class="hljs-title function_ ngde">observe</span>({
</span><span class="line ngde">    <span class="hljs-attr ngde">compact</span>: <span class="hljs-string ngde">'(max-width: 599px)'</span>,
</span><span class="line ngde">    <span class="hljs-attr ngde">medium</span>: <span class="hljs-string ngde">'(min-width: 600px) and (max-width: 839px)'</span>,
</span><span class="line ngde">    <span class="hljs-attr ngde">extended</span>: <span class="hljs-string ngde">'(min-width: 840px)'</span>,
</span><span class="line ngde">  })
</span><span class="line ngde">  .<span class="hljs-title function_ ngde">subscribe</span>(<span class="hljs-function ngde">(<span class="hljs-params ngde">map</span>) =></span> {
</span><span class="line ngde">    <span class="hljs-comment ngde">// Record&#x3C;'compact' | 'medium' | 'extended', boolean></span>
</span><span class="line ngde">  });
</span></code></pre>`,O=(()=>{let e=class e extends t{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=j,this.page=s,this.demoAssets=u}};e.\u0275fac=function(a){return new(a||e)},e.\u0275cmp=c({type:e,selectors:[["ng-doc-page-cdk-breakpoints"]],standalone:!0,features:[l([{provide:t,useExisting:e},m,s.providers??[]]),p,d],decls:1,vars:0,template:function(a,N){a&1&&r(0,"ng-doc-page")},dependencies:[g],encapsulation:2,changeDetection:0});let n=e;return n})(),D=[i(o({},(0,f.isRoute)(s.route)?s.route:{}),{path:"",component:O,title:"Breakpoints"})],L=D;export{O as DynamicComponent,L as default};
