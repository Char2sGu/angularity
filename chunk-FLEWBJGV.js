import{a as d}from"./chunk-IK7FDAWK.js";import"./chunk-73E4PGK3.js";import"./chunk-BEEPLMHP.js";import{a as n}from"./chunk-OIQWCD35.js";import"./chunk-NGRQBGZ3.js";import"./chunk-TKY5DHZR.js";import{Ba as e,Ra as i,U as l,nb as o,ob as c}from"./chunk-2P42YJQL.js";import"./chunk-TWZW5B45.js";var r=`<p class="ngde">Assembles a facade object for a specific dialog component type with optional default configurations, enabling a satisfying development experience working with Angular CDK dialogs.</p><h2 id="presentation" href="api/functions/cdk-dialog/useDialog" headinglink="true" class="ngde">Presentation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="presentation"></ng-doc-heading-anchor></h2><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">function</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> <a href="api/functions/cdk-dialog/useDialog" class="ng-doc-code-anchor ngde">useDialog</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">  component</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> Type</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">T</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">  configDefaults</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> Partial</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"><a href="api/type-aliases/cdk-dialog/DialogConfigOf" class="ng-doc-code-anchor ngde">DialogConfigOf</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">T</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>> </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {}</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  [</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">service</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> injector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> destroyRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> componentFactoryResolver</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> viewContainerRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">    Dialog</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">    Injector</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">    DestroyRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">    ComponentFactoryResolver</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">    ViewContainerRef</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> |</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> undefined</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ] </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> [</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    inject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(Dialog)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    inject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(Injector)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    inject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(DestroyRef)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    inject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(ComponentFactoryResolver)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    inject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(ViewContainerRef</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { optional</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> true</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> }) </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">??</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> undefined</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> // available only in components</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> <a href="api/interfaces/cdk-dialog/DialogFacade" class="ng-doc-code-anchor ngde">DialogFacade</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">T</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span></code></pre><h2 id="returns" href="api/functions/cdk-dialog/useDialog" headinglink="true" class="ngde">Returns<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="returns"></ng-doc-heading-anchor></h2><div class="ng-doc-returns ngde"><code indexable="false" class="ngde ng-doc-code-with-link"><a href="api/interfaces/cdk-dialog/DialogFacade" class="ng-doc-code-anchor ngde">DialogFacade</a>&#x3C;T></code> <span class="ngde">-</span><p class="ngde">a <code class="ngde ng-doc-code-with-link"><a href="api/interfaces/cdk-dialog/DialogFacade" class="ng-doc-code-anchor ngde">DialogFacade</a></code> object for the specified dialog component</p></div><h2 id="parameters" href="api/functions/cdk-dialog/useDialog" headinglink="true" class="ngde">Parameters<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="parameters"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ngde">Name</th><th class="ngde">Type</th><th class="ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">component<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">Type&#x3C;T></code></td><td class="ngde"><p class="ngde">dialog component class, extending <code class="ngde ng-doc-code-with-link"><a href="api/classes/cdk-dialog/DialogIoTypes" class="ng-doc-code-anchor ngde">DialogIoTypes</a></code></p></td></tr><tr class="ngde"><td indexable="false" class="ngde">configDefaults<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">Partial&#x3C;<a href="api/type-aliases/cdk-dialog/DialogConfigOf" class="ng-doc-code-anchor ngde">DialogConfigOf</a>&#x3C;T>></code></td><td class="ngde"><p class="ngde">default configuration for the dialog</p></td></tr><tr class="ngde"><td indexable="false" class="ngde">[ service, injector, destroyRef, componentFactoryResolver, viewContainerRef, ]<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">[Dialog, Injector, DestroyRef, ComponentFactoryResolver, ViewContainerRef | undefined]</code></td><td class="ngde"></td></tr></tbody></table></div><section indexable="false" class="ngde"><h2 id="example-usage" href="api/functions/cdk-dialog/useDialog" headinglink="true" class="ngde">Example usage<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="example-usage"></ng-doc-heading-anchor></h2><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// Declare dialog input and output types on the dialog class.</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"></span><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({ </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">...</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> })</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> MyDialog</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> extends</span><span style="color:#6F42C1;--shiki-dark:#39BAE6" class="ngde"> <a href="api/classes/cdk-dialog/DialogIoTypes" class="ng-doc-code-anchor ngde">DialogIoTypes</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  { </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">someData</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> object</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> }</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> // Input type</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  { </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">someResult</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> object</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> } </span><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// Output type</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">> {}</span></span></code></pre><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> </span><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">@</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Component</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({ </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">...</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> })</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> class</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> HostComponent</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">   private</span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde"> myDialog</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> <a href="api/functions/cdk-dialog/useDialog" class="ng-doc-code-anchor ngde">useDialog</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(MyDialog</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { disableClose</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> true</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">   onFoo</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">     // Typed dialog launching experience.</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">     const</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde"> ref</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">myDialog</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">launch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">({ data</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { inputs</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "values"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> } })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">     // Typed dialog output</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">     ref</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">closed</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">subscribe</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">((</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">output</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">=></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">...</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">   onBar</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">     // Access the current DialogRef anytime.</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">     this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">myDialog</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">ref</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">?.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">close</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">   constructor</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">() {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">     effect</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(() </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">=></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">       const</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde"> ref</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">myDialog</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">ref</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">       // Listen to the dialog launching and closing</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">       if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (ref) console</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">log</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"Dialog launched"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">       else</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> console</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">log</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"Dialog closed or never launched"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">     })</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">   }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> }</span></span></code></pre></section>`,t=(()=>{class s extends n{constructor(){super(),this.pageType="api",this.pageContent=r}static{this.\u0275fac=function(a){return new(a||s)}}static{this.\u0275cmp=l({type:s,selectors:[["ng-doc-page-hd4lxzz2"]],standalone:!0,features:[o([{provide:n,useExisting:s}]),e,c],decls:1,vars:0,template:function(a,g){a&1&&i(0,"ng-doc-page")},dependencies:[d],encapsulation:2,changeDetection:0})}}return s})(),k=[{path:"",component:t,title:"useDialog"}],F=k;export{t as PageComponent,F as default};
