[{"breadcrumbs":["API References","elements","Elements"],"pageType":"api","title":"Elements","section":"","route":"api/interfaces/elements/Elements","content":"Declaration of Angular Element tag names and their corresponding constructors."},{"breadcrumbs":["API References","theming","ThemeTokens"],"pageType":"api","title":"ThemeTokens","section":"","route":"api/interfaces/theming/ThemeTokens","content":"Name-value pairs that represent the small, repeated design decisions that make up a design system's visual style."},{"breadcrumbs":["API References","endpoints","Endpoint"],"pageType":"api","title":"Endpoint","section":"","route":"api/interfaces/endpoints/Endpoint","content":"A function representing an API endpoint."},{"breadcrumbs":["API References","endpoints","EndpointSchemas"],"pageType":"api","title":"EndpointSchemas","section":"","route":"api/interfaces/endpoints/EndpointSchemas","content":"A collection of API endpoint schemas. The keys are the names of the endpoints."},{"breadcrumbs":["Core","Reference Injection"],"pageType":"guide","title":"Reference Injection","section":"","route":"core/reference-injection","content":"TODO"},{"breadcrumbs":["CDK","Overview"],"pageType":"guide","title":"Overview","section":"","route":"cdk/overview","content":"TODO"},{"breadcrumbs":["Core","Overview"],"pageType":"guide","title":"Overview","section":"","route":"core/overview","content":"TODO"},{"breadcrumbs":["API References","core","ProvideConfig"],"pageType":"api","title":"ProvideConfig","section":"","route":"api/type-aliases/core/ProvideConfig","content":"Union configuration for all types of NON-multi Provider declarations."},{"breadcrumbs":["API References","core","ProvideMultiConfig"],"pageType":"api","title":"ProvideMultiConfig","section":"","route":"api/type-aliases/core/ProvideMultiConfig","content":"Union configuration for all types of multi Provider declarations."},{"breadcrumbs":["API References","core","ProvideConfigToken"],"pageType":"api","title":"ProvideConfigToken","section":"","route":"api/interfaces/core/ProvideConfigToken","content":"Token part of a Provider configuration."},{"breadcrumbs":["API References","core","ProvideConfigUse"],"pageType":"api","title":"ProvideConfigUse","section":"","route":"api/type-aliases/core/ProvideConfigUse","content":"Union value declaration part of a Provider configuration."},{"breadcrumbs":["API References","core","$type"],"pageType":"api","title":"$type","section":"","route":"api/variables/core/$type","content":"Forwarded symbol from upstream type-container for convenience."},{"breadcrumbs":["API References","core","TypeContainer"],"pageType":"api","title":"TypeContainer","section":"","route":"api/type-aliases/core/TypeContainer","content":"Forwarded symbol from upstream type-container for convenience."},{"breadcrumbs":["API References","core","ContainedTypeOf"],"pageType":"api","title":"ContainedTypeOf","section":"","route":"api/type-aliases/core/ContainedTypeOf","content":"Forwarded symbol from upstream type-container for convenience."},{"breadcrumbs":["API References","core / rxjs","pickType"],"pageType":"api","title":"pickType","section":"","route":"api/variables/core-rxjs/pickType","content":"RxJS operator that filters out values that are not instances of the provided types. Returns an Observable that emits only values that are instances of the provided types."},{"breadcrumbs":["API References","cdk / layout","BreakpointConfig"],"pageType":"api","title":"BreakpointConfig","section":"","route":"api/type-aliases/cdk-layout/BreakpointConfig","content":"A map of breakpoint names to their corresponding media queries."},{"breadcrumbs":["API References","cdk / layout","BreakpointMap"],"pageType":"api","title":"BreakpointMap","section":"","route":"api/type-aliases/cdk-layout/BreakpointMap","content":"A map of breakpoint names to whether they are currently active."},{"breadcrumbs":["API References","cdk / dialog","DialogConfigOf"],"pageType":"api","title":"DialogConfigOf","section":"","route":"api/type-aliases/cdk-dialog/DialogConfigOf","content":"Extracts a strictly typed DialogConfig type from a dialog component type that extends DialogIoTypes."},{"breadcrumbs":["API References","cdk / dialog","DialogOutputOf"],"pageType":"api","title":"DialogOutputOf","section":"","route":"api/type-aliases/cdk-dialog/DialogOutputOf","content":"Utility type to extract the output type from a dialog component type that extends DialogIoTypes."},{"breadcrumbs":["API References","cdk / dialog","DialogRefOf"],"pageType":"api","title":"DialogRefOf","section":"","route":"api/type-aliases/cdk-dialog/DialogRefOf","content":"Utility type to extract a strictly typed DialogRef type from a dialog component type that extends DialogIoTypes."},{"breadcrumbs":["API References","cdk / dialog","DialogIoTypes"],"pageType":"api","title":"DialogIoTypes","section":"","route":"api/classes/cdk-dialog/DialogIoTypes","content":"Base class for any dialog component classes to declare their input and output types and work with the other utility types and the useDialog function."},{"breadcrumbs":["API References","cdk / dialog","DialogInputOf"],"pageType":"api","title":"DialogInputOf","section":"","route":"api/type-aliases/cdk-dialog/DialogInputOf","content":"Utility type to extract the input type from a dialog component type that extends DialogIoTypes."},{"breadcrumbs":["API References","router","RouteDataDefinition"],"pageType":"api","title":"RouteDataDefinition","section":"","route":"api/interfaces/router/RouteDataDefinition","content":"Token-value pair that associates a value to a token."},{"breadcrumbs":["API References","elements","ELEMENT_REGISTRY"],"pageType":"api","title":"ELEMENT_REGISTRY","section":"","route":"api/variables/elements/ELEMENT_REGISTRY","content":"Injection Token for the ECMA CustomElementRegistry instance."},{"breadcrumbs":["API References","theming","ThemeBuilderConfigOf"],"pageType":"api","title":"ThemeBuilderConfigOf","section":"","route":"api/type-aliases/theming/ThemeBuilderConfigOf","content":"Utility type that extracts the accepted configuration type from a ThemeBuilder type."},{"breadcrumbs":["API References","theming-material","HexStringHctFormatter"],"pageType":"api","title":"HexStringHctFormatter","section":"","route":"api/classes/theming-material/HexStringHctFormatter","content":"Implementation of HctFormatter that formats HCT color values into hex strings such as #ffffff."},{"breadcrumbs":["API References","theming-material","SchemeMode"],"pageType":"api","title":"SchemeMode","section":"","route":"api/enums/theming-material/SchemeMode","content":"Mode for Material color schemes."},{"breadcrumbs":["API References","theming-material","SchemeContrastLevel"],"pageType":"api","title":"SchemeContrastLevel","section":"","route":"api/enums/theming-material/SchemeContrastLevel","content":"Common contrast level values for Material color schemes. Standard should fit for most use cases."},{"breadcrumbs":["API References","theming-material","STANDARD_TYPESCALES"],"pageType":"api","title":"STANDARD_TYPESCALES","section":"","route":"api/variables/theming-material/STANDARD_TYPESCALES","content":"Standard typescale configuration strictly following Material specifications."},{"breadcrumbs":["API References","theming-material","StandardTypescaleBuilderConfig"],"pageType":"api","title":"StandardTypescaleBuilderConfig","section":"","route":"api/interfaces/theming-material/StandardTypescaleBuilderConfig","content":"Configuration for StandardTypescaleBuilder."},{"breadcrumbs":["API References","endpoints","GenerateEndpoint"],"pageType":"api","title":"GenerateEndpoint","section":"","route":"api/type-aliases/endpoints/GenerateEndpoint","content":"Computed type that resolves an EndpointSchema type into a function type which accepts an object of parameters as declared, if any, and returns an observable of the response type as declared."},{"breadcrumbs":["API References","endpoints","ResolveEndpointParamsSchema"],"pageType":"api","title":"ResolveEndpointParamsSchema","section":"","route":"api/type-aliases/endpoints/ResolveEndpointParamsSchema","content":"Computed type that resolves a EndpointParamsSchema type into an object type that can be used as a parameter to an endpoint function."},{"breadcrumbs":["API References","endpoints","GenerateEndpoints"],"pageType":"api","title":"GenerateEndpoints","section":"","route":"api/type-aliases/endpoints/GenerateEndpoints","content":"Bulk version of GenerateEndpoint. Accepts an EndpointSchemas type and apply GenerateEndpoint on each of the entries."},{"breadcrumbs":["CDK","Breakpoints"],"pageType":"guide","title":"Breakpoints","section":"","route":"cdk/breakpoints","content":"In Angular CDK, the BreakpointObserver is especially useful for observing changes in the layout. However, it uses the media query string as the key to index the result of multiple queries, which makes it inconvenient for the developer to tell which breakpoints are activated."},{"breadcrumbs":["CDK","Breakpoints"],"pageType":"guide","title":"Breakpoints","section":"","route":"cdk/breakpoints","content":"Angularity offers NamedBreakpointObserver as a wrapper of BreakpointObserver, which allows you to assign a name for each media query:"},{"breadcrumbs":["API References","core / rxjs","mapToVoid"],"pageType":"api","title":"mapToVoid","section":"","route":"api/variables/core-rxjs/mapToVoid","content":"RxJS operator that maps values to undefined. Useful when an Observable"},{"breadcrumbs":["API References","core / rxjs","mapToVoid"],"pageType":"api","title":"mapToVoid","section":"","route":"api/variables/core-rxjs/mapToVoid","content":" type is expected."},{"breadcrumbs":["API References","theming","ThemeTokenNotFoundException"],"pageType":"api","title":"ThemeTokenNotFoundException","section":"","route":"api/classes/theming/ThemeTokenNotFoundException","content":"Exception thrown when a theme token is not found in the registry."},{"breadcrumbs":["API References","theming-material","ImageSeedColorExtractor"],"pageType":"api","title":"ImageSeedColorExtractor","section":"Methods","route":"api/classes/theming-material/ImageSeedColorExtractor","fragment":"methods","content":"Extracts seed colors from the image at the given URL, sorted by relevance."},{"breadcrumbs":["API References","theming-material","ImagePixelExtractor"],"pageType":"api","title":"ImagePixelExtractor","section":"Methods","route":"api/classes/theming-material/ImagePixelExtractor","fragment":"methods","content":"Extracts the pixels as argb numbers from the image at the given URL."},{"breadcrumbs":["API References","theming-material","ImagePixelExtractor"],"pageType":"api","title":"ImagePixelExtractor","section":"Methods","route":"api/classes/theming-material/ImagePixelExtractor","fragment":"methods","content":"Scale the image to fit within this box."},{"breadcrumbs":["API References","theming-material","SchemeType"],"pageType":"api","title":"SchemeType","section":"","route":"api/interfaces/theming-material/SchemeType","content":"Constructor of DynamicScheme from material-color-utilities."},{"breadcrumbs":["API References","theming-material","SchemeType"],"pageType":"api","title":"SchemeType","section":"","route":"api/interfaces/theming-material/SchemeType","content":"Available values include:"},{"breadcrumbs":["API References","theming-material","SchemeType"],"pageType":"api","title":"SchemeType","section":"","route":"api/interfaces/theming-material/SchemeType","content":"SchemeTonalSpot: classic Material Design colorsSchemeVibrant: more vibrant colorsSchemeMonochrome: grayscale colorsSchemeNeutral: colors that are nearly grayscaleSchemeFidelity: match the source color as closely as possibleetc."},{"breadcrumbs":["API References","theming-material","TypescaleBuilderConfig"],"pageType":"api","title":"TypescaleBuilderConfig","section":"","route":"api/interfaces/theming-material/TypescaleBuilderConfig","content":"Configuration for TypescaleBuilder. An array of TypescaleConfig objects."},{"breadcrumbs":["API References","endpoints","EndpointParamsSchema"],"pageType":"api","title":"EndpointParamsSchema","section":"","route":"api/interfaces/endpoints/EndpointParamsSchema","content":"Declaration schema of an API endpoint's parameters."},{"breadcrumbs":["API References","endpoints","EndpointParamsSchema"],"pageType":"api","title":"EndpointParamsSchema","section":"","route":"api/interfaces/endpoints/EndpointParamsSchema","content":"Syntax:"},{"breadcrumbs":["API References","endpoints","EndpointParamsSchema"],"pageType":"api","title":"EndpointParamsSchema","section":"","route":"api/interfaces/endpoints/EndpointParamsSchema","content":"field: required payload parameterfield?: optional payload parameter?field: required query parameter?field?: optional query parameter"},{"breadcrumbs":["API References","config-files","HttpClientConfigFileLoader"],"pageType":"api","title":"HttpClientConfigFileLoader","section":"","route":"api/classes/config-files/HttpClientConfigFileLoader","content":"Implementation of {@link ConfigFileLoader} based on Angular's built-in {@link HttpClient}."},{"breadcrumbs":["API References","core","Exception"],"pageType":"api","title":"Exception","section":"","route":"api/classes/core/Exception","content":"An Exception is a runtime exception that is meant to caught and handled. On the other hand, an Error is unrecoverable and are not meant to be caught."},{"breadcrumbs":["API References","core","Exception"],"pageType":"api","title":"Exception","section":"Notes","route":"api/classes/core/Exception","fragment":"notes","content":"Extending this class will automatically override the name property to the class name, resulting in a more descriptive error message."},{"breadcrumbs":["API References","core","injectRef"],"pageType":"api","title":"injectRef","section":"","route":"api/functions/core/injectRef","content":"Inject a proxy of the target dependency, which defers the actual injection until any of its properties is accessed."},{"breadcrumbs":["API References","theming","ThemeBuilderContext"],"pageType":"api","title":"ThemeBuilderContext","section":"","route":"api/interfaces/theming/ThemeBuilderContext","content":"Contextual information required for generating theme tokens."},{"breadcrumbs":["API References","theming","ThemeBuilderContext"],"pageType":"api","title":"ThemeBuilderContext","section":"Properties","route":"api/interfaces/theming/ThemeBuilderContext","fragment":"properties","content":"Options that affects the behavior of the token generation."},{"breadcrumbs":["API References","theming","ThemeBuilderContext"],"pageType":"api","title":"ThemeBuilderContext","section":"Properties","route":"api/interfaces/theming/ThemeBuilderContext","fragment":"properties","content":"Name assigned to this theme builder. May or may not be included in generated token names, depending on the implementation."},{"breadcrumbs":["API References","theming","TokensBuilder"],"pageType":"api","title":"TokensBuilder","section":"","route":"api/classes/theming/TokensBuilder","content":"An implementation of ThemeBuilder that simply accepts an object of pre-defined theme tokens as configuration and returns them as is when requested to generate tokens."},{"breadcrumbs":["API References","theming","TokensBuilder"],"pageType":"api","title":"TokensBuilder","section":"Notes","route":"api/classes/theming/TokensBuilder","fragment":"notes","content":"The name assigned to this builder has no effects."},{"breadcrumbs":["API References","theming","TestingThemeTokenRegistry"],"pageType":"api","title":"TestingThemeTokenRegistry","section":"","route":"api/classes/theming/TestingThemeTokenRegistry","content":"Implementation of ThemeTokenRegistry that is intended for testing purposes."},{"breadcrumbs":["API References","theming","TestingThemeTokenRegistry"],"pageType":"api","title":"TestingThemeTokenRegistry","section":"Properties","route":"api/classes/theming/TestingThemeTokenRegistry","fragment":"properties","content":"In-memory storage of theme tokens."},{"breadcrumbs":["API References","theming-material","HctFormatter"],"pageType":"api","title":"HctFormatter","section":"","route":"api/classes/theming-material/HctFormatter","content":"Service responsible for formatting HCT color values into strings, which will be used as theme token values."},{"breadcrumbs":["API References","theming-material","HctFormatter"],"pageType":"api","title":"HctFormatter","section":"Notes","route":"api/classes/theming-material/HctFormatter","fragment":"notes","content":"This is an abstract service, with a default implementation HexStringHctFormatter."},{"breadcrumbs":["API References","endpoints","createEndpointsInjectionToken"],"pageType":"api","title":"createEndpointsInjectionToken","section":"","route":"api/functions/endpoints/createEndpointsInjectionToken","content":"Convenience function that creates a typed InjectionToken with a default value of a collection of endpoints generated from the given schemas, through generateEndpoints."},{"breadcrumbs":["API References","theming","ThemeBuilderComposition"],"pageType":"api","title":"ThemeBuilderComposition","section":"","route":"api/interfaces/theming/ThemeBuilderComposition","content":"Represents a token generation specification, which specifies the target ThemeBuilder and relevant configurations to be passed to the builder."},{"breadcrumbs":["API References","theming","ThemeBuilderComposition"],"pageType":"api","title":"ThemeBuilderComposition","section":"Properties","route":"api/interfaces/theming/ThemeBuilderComposition","fragment":"properties","content":"The token that can be used to retrieve the theme builder instance from the injector."},{"breadcrumbs":["API References","theming","ThemeBuilderComposition"],"pageType":"api","title":"ThemeBuilderComposition","section":"Properties","route":"api/interfaces/theming/ThemeBuilderComposition","fragment":"properties","content":"The configuration object that will be passed to the theme builder."},{"breadcrumbs":["API References","theming","ThemeBuilderComposition"],"pageType":"api","title":"ThemeBuilderComposition","section":"Properties","route":"api/interfaces/theming/ThemeBuilderComposition","fragment":"properties","content":"The name that will be passed to the theme builder."},{"breadcrumbs":["API References","theming","provideTheme"],"pageType":"api","title":"provideTheme","section":"","route":"api/functions/theming/provideTheme","content":"Make providers that consume the given list of theme token generation specifications by generating and applying the latest theme tokens as specified."},{"breadcrumbs":["API References","theming","provideTheme"],"pageType":"api","title":"provideTheme","section":"Parameters","route":"api/functions/theming/provideTheme","fragment":"parameters","content":"list of theme token generation specifications"},{"breadcrumbs":["API References","theming-material","TypescaleBuilder"],"pageType":"api","title":"TypescaleBuilder","section":"","route":"api/classes/theming-material/TypescaleBuilder","content":"Implementation of ThemeBuilder for generating theme tokens relevant to Material typescale levels."},{"breadcrumbs":["API References","theming-material","TypescaleBuilder"],"pageType":"api","title":"TypescaleBuilder","section":"Notes","route":"api/classes/theming-material/TypescaleBuilder","fragment":"notes","content":"A typescale is a selection of font styles that can be used across an app, ensuring a flexible, yet consistent, style that accommodates a range of purposes. See the specification for more details."},{"breadcrumbs":["API References","theming-material","TypescaleBuilder"],"pageType":"api","title":"TypescaleBuilder","section":"Notes","route":"api/classes/theming-material/TypescaleBuilder","fragment":"notes","content":"Each TypescaleConfig generates 5 theme tokens. For a typescale level named \"display-large\", the generated tokens will be \"display-large-font\", \"display-large-weight\", \"display-large-size\", \"display-large-line-height\", \"display-large-tracking\"."},{"breadcrumbs":["API References","endpoints","HttpClientEndpointInvoker"],"pageType":"api","title":"HttpClientEndpointInvoker","section":"","route":"api/classes/endpoints/HttpClientEndpointInvoker","content":"Minimal implementation of EndpointInvoker based on Angular's built-in HttpClient service."},{"breadcrumbs":["API References","endpoints","HttpClientEndpointInvoker"],"pageType":"api","title":"HttpClientEndpointInvoker","section":"Notes","route":"api/classes/endpoints/HttpClientEndpointInvoker","fragment":"notes","content":"When this implementation is used, EndpointSchema should specify a valid relative or absolute HTTP path and a valid HTTP method e.g. \"GET\", \"POST\", etc."},{"breadcrumbs":["API References","router","defineRouteData"],"pageType":"api","title":"defineRouteData","section":"","route":"api/functions/router/defineRouteData","content":"Type helper that helps creating valid RouteDataDefinition objects utilizing type-inference."},{"breadcrumbs":["API References","router","defineRouteData"],"pageType":"api","title":"defineRouteData","section":"Notes","route":"api/functions/router/defineRouteData","fragment":"notes","content":"The type of the value is guaranteed to be compatible with the declared type in the token."},{"breadcrumbs":["API References","elements","provideElements"],"pageType":"api","title":"provideElements","section":"","route":"api/functions/elements/provideElements","content":"Offers a declarative approach to register Angular Elements."},{"breadcrumbs":["API References","elements","provideElements"],"pageType":"api","title":"provideElements","section":"Notes","route":"api/functions/elements/provideElements","fragment":"notes","content":"The returned providers are for EnvironmentInjector only, e.g. app.config.ts, route declarations, and NgModules. The registered Angular Elements will not be unregistered when the EnvironmentInjector is destroyed, so make sure the EnvironmentInjector will not be destroyed anytime in the application's lifecycle."},{"breadcrumbs":["API References","theming","ThemeBuilder"],"pageType":"api","title":"ThemeBuilder","section":"","route":"api/interfaces/theming/ThemeBuilder","content":"Responsible for generating a group of theme tokens based on a configuration."},{"breadcrumbs":["API References","theming","ThemeBuilder"],"pageType":"api","title":"ThemeBuilder","section":"Notes","route":"api/interfaces/theming/ThemeBuilder","fragment":"notes","content":"The generic type parameter declares the acceptable configuration type."},{"breadcrumbs":["API References","theming","ThemeBuilder"],"pageType":"api","title":"ThemeBuilder","section":"Notes","route":"api/interfaces/theming/ThemeBuilder","fragment":"notes","content":"This package contains a built-in implementation: TokensBuilder."},{"breadcrumbs":["API References","theming","ThemeBuilder"],"pageType":"api","title":"ThemeBuilder","section":"Methods","route":"api/interfaces/theming/ThemeBuilder","fragment":"methods","content":"Generate a group of theme tokens based on a configuration."},{"breadcrumbs":["API References","theming-material","SchemeBuilder"],"pageType":"api","title":"SchemeBuilder","section":"","route":"api/classes/theming-material/SchemeBuilder","content":"Implementation of ThemeBuilder that generates hex color tokens for all Material Design color roles."},{"breadcrumbs":["API References","theming-material","SchemeBuilder"],"pageType":"api","title":"SchemeBuilder","section":"Notes","route":"api/classes/theming-material/SchemeBuilder","fragment":"notes","content":"Examples of generated tokens include \"surface\", \"on-surface\", \"surface-container\", \"on-surface-container\", \"primary\", \"on-primary\", etc."},{"breadcrumbs":["API References","theming-material","SchemeBuilder"],"pageType":"api","title":"SchemeBuilder","section":"Notes","route":"api/classes/theming-material/SchemeBuilder","fragment":"notes","content":"A non-empty name must be assigned to this builder. The name assigned to this builder will be used as the prefix to the generated tokens. When the name is \"scheme\", the generated tokens will be \"scheme-primary\", \"scheme-on-primary\", etc."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilderConfig"],"pageType":"api","title":"SchemeStaticColorBuilderConfig","section":"","route":"api/interfaces/theming-material/SchemeStaticColorBuilderConfig","content":"Configuration for SchemeStaticColorBuilder."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilderConfig"],"pageType":"api","title":"SchemeStaticColorBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeStaticColorBuilderConfig","fragment":"properties","content":"Mode of the scheme. Light or Dark."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilderConfig"],"pageType":"api","title":"SchemeStaticColorBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeStaticColorBuilderConfig","fragment":"properties","content":"Name of the static color, e.g. \"success\"."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilderConfig"],"pageType":"api","title":"SchemeStaticColorBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeStaticColorBuilderConfig","fragment":"properties","content":"Source/Seed color for the static color. Only the hue and chroma of this color will be used."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilderConfig"],"pageType":"api","title":"SchemeStaticColorBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeStaticColorBuilderConfig","fragment":"properties","content":"Hct is the color representation from material-color-utilities, which consists of hue, chroma, and tone."},{"breadcrumbs":["API References","theming-material","StandardTypescaleBuilder"],"pageType":"api","title":"StandardTypescaleBuilder","section":"","route":"api/classes/theming-material/StandardTypescaleBuilder","content":"Implementation of ThemeBuilder that generates theme tokens of typescale levels strictly following the Material specifications."},{"breadcrumbs":["API References","theming-material","StandardTypescaleBuilder"],"pageType":"api","title":"StandardTypescaleBuilder","section":"Notes","route":"api/classes/theming-material/StandardTypescaleBuilder","fragment":"notes","content":"A typescale is a selection of font styles that can be used across an app, ensuring a flexible, yet consistent, style that accommodates a range of purposes. See the specification for more details."},{"breadcrumbs":["API References","theming-material","StandardTypescaleBuilder"],"pageType":"api","title":"StandardTypescaleBuilder","section":"Notes","route":"api/classes/theming-material/StandardTypescaleBuilder","fragment":"notes","content":"Each TypescaleConfig generates 5 theme tokens. For a typescale level named \"display-large\", the generated tokens will be \"display-large-font\", \"display-large-weight\", \"display-large-size\", \"display-large-line-height\", \"display-large-tracking\"."},{"breadcrumbs":["API References","endpoints","EndpointSchema"],"pageType":"api","title":"EndpointSchema","section":"","route":"api/interfaces/endpoints/EndpointSchema","content":"Declaration schema of an API endpoint."},{"breadcrumbs":["API References","endpoints","EndpointSchema"],"pageType":"api","title":"EndpointSchema","section":"Properties","route":"api/interfaces/endpoints/EndpointSchema","fragment":"properties","content":"The method to be used for invoking the endpoint. The definition of \"method\" may vary depending on the concrete EndpointInvoker implementation."},{"breadcrumbs":["API References","endpoints","EndpointSchema"],"pageType":"api","title":"EndpointSchema","section":"Properties","route":"api/interfaces/endpoints/EndpointSchema","fragment":"properties","content":"Declaration of acceptable parameters of the endpoint if any, used primarily for type-inference at our end."},{"breadcrumbs":["API References","endpoints","EndpointSchema"],"pageType":"api","title":"EndpointSchema","section":"Properties","route":"api/interfaces/endpoints/EndpointSchema","fragment":"properties","content":"Path of the target API endpoint. The definition and format of \"path\" may vary depending on the concrete EndpointInvoker implementation."},{"breadcrumbs":["API References","endpoints","EndpointSchema"],"pageType":"api","title":"EndpointSchema","section":"Properties","route":"api/interfaces/endpoints/EndpointSchema","fragment":"properties","content":"Declaration of the expected response of the endpoint, used primarily for type-inference at our end."},{"breadcrumbs":["API References","endpoints","generateEndpoint"],"pageType":"api","title":"generateEndpoint","section":"","route":"api/functions/endpoints/generateEndpoint","content":"Resolves an EndpointSchema object into a function, which accepts an object of parameters as declared, if any, and returns an observable response."},{"breadcrumbs":["API References","endpoints","generateEndpoint"],"pageType":"api","title":"generateEndpoint","section":"Parameters","route":"api/functions/endpoints/generateEndpoint","fragment":"parameters","content":"the EndpointInvoker instance to use under the hood"},{"breadcrumbs":["API References","endpoints","generateEndpoint"],"pageType":"api","title":"generateEndpoint","section":"Parameters","route":"api/functions/endpoints/generateEndpoint","fragment":"parameters","content":"the declaration schema of the endpoint"},{"breadcrumbs":["API References","endpoints","generateEndpoints"],"pageType":"api","title":"generateEndpoints","section":"","route":"api/functions/endpoints/generateEndpoints","content":"Bulk version of generateEndpoint. Accepts an EndpointSchemas object and apply generateEndpoint on each of the entries."},{"breadcrumbs":["API References","endpoints","generateEndpoints"],"pageType":"api","title":"generateEndpoints","section":"Parameters","route":"api/functions/endpoints/generateEndpoints","fragment":"parameters","content":"the EndpointInvoker instance to use under the hood"},{"breadcrumbs":["API References","endpoints","generateEndpoints"],"pageType":"api","title":"generateEndpoints","section":"Parameters","route":"api/functions/endpoints/generateEndpoints","fragment":"parameters","content":"schema declarations"},{"breadcrumbs":["API References","endpoints","EndpointInvokeConfig"],"pageType":"api","title":"EndpointInvokeConfig","section":"","route":"api/interfaces/endpoints/EndpointInvokeConfig","content":"Contextual information used for endpoint invoking."},{"breadcrumbs":["API References","endpoints","EndpointInvokeConfig"],"pageType":"api","title":"EndpointInvokeConfig","section":"Properties","route":"api/interfaces/endpoints/EndpointInvokeConfig","fragment":"properties","content":"The method to be used for invoking the endpoint. The definition of \"method\" may vary depending on the concrete EndpointInvoker implementation. This property is forward from the source EndpointSchema."},{"breadcrumbs":["API References","endpoints","EndpointInvokeConfig"],"pageType":"api","title":"EndpointInvokeConfig","section":"Properties","route":"api/interfaces/endpoints/EndpointInvokeConfig","fragment":"properties","content":"Path of the target API endpoint. The definition and format of \"path\" may vary depending on the concrete EndpointInvoker implementation. This property is forward from the source EndpointSchema."},{"breadcrumbs":["API References","endpoints","EndpointInvokeConfig"],"pageType":"api","title":"EndpointInvokeConfig","section":"Properties","route":"api/interfaces/endpoints/EndpointInvokeConfig","fragment":"properties","content":"The payload to be sent to the endpoint, if any."},{"breadcrumbs":["API References","endpoints","EndpointInvokeConfig"],"pageType":"api","title":"EndpointInvokeConfig","section":"Properties","route":"api/interfaces/endpoints/EndpointInvokeConfig","fragment":"properties","content":"The query to be sent to the endpoint, if any. Only primitive types are allowed as values."},{"breadcrumbs":["API References","core","provide"],"pageType":"api","title":"provide","section":"","route":"api/functions/core/provide","content":"Type-safe factory function for producing NON-multi Provider configs."},{"breadcrumbs":["API References","core","provide"],"pageType":"api","title":"provide","section":"Returns","route":"api/functions/core/provide","fragment":"returns","content":"-"},{"breadcrumbs":["API References","core","provide"],"pageType":"api","title":"provide","section":"Returns","route":"api/functions/core/provide","fragment":"returns","content":"a Provider object"},{"breadcrumbs":["API References","core","provide"],"pageType":"api","title":"provide","section":"Parameters","route":"api/functions/core/provide","fragment":"parameters","content":"type-safe configuration object"},{"breadcrumbs":["API References","core","provideMulti"],"pageType":"api","title":"provideMulti","section":"","route":"api/functions/core/provideMulti","content":"Type-safe factory function for producing multi Provider configs."},{"breadcrumbs":["API References","core","provideMulti"],"pageType":"api","title":"provideMulti","section":"Returns","route":"api/functions/core/provideMulti","fragment":"returns","content":"-"},{"breadcrumbs":["API References","core","provideMulti"],"pageType":"api","title":"provideMulti","section":"Returns","route":"api/functions/core/provideMulti","fragment":"returns","content":"a Provider object"},{"breadcrumbs":["API References","core","provideMulti"],"pageType":"api","title":"provideMulti","section":"Parameters","route":"api/functions/core/provideMulti","fragment":"parameters","content":"type-safe configuration object"},{"breadcrumbs":["API References","router","compileRouteData"],"pageType":"api","title":"compileRouteData","section":"","route":"api/functions/router/compileRouteData","content":"Take a list of RouteDataDefinition and compile them into an object that can be accepted as the data field of an Angular route, so that these data records can be retrieved later."},{"breadcrumbs":["API References","router","compileRouteData"],"pageType":"api","title":"compileRouteData","section":"Returns","route":"api/functions/router/compileRouteData","fragment":"returns","content":"-"},{"breadcrumbs":["API References","router","compileRouteData"],"pageType":"api","title":"compileRouteData","section":"Returns","route":"api/functions/router/compileRouteData","fragment":"returns","content":"an object that can be used as the data of an Angular route"},{"breadcrumbs":["API References","router","compileRouteData"],"pageType":"api","title":"compileRouteData","section":"Parameters","route":"api/functions/router/compileRouteData","fragment":"parameters","content":"data records, preferably created via defineRouteData"},{"breadcrumbs":["API References","router","RouteDataToken"],"pageType":"api","title":"RouteDataToken","section":"","route":"api/classes/router/RouteDataToken","content":"Token that declares a type of route data."},{"breadcrumbs":["API References","router","RouteDataToken"],"pageType":"api","title":"RouteDataToken","section":"Notes","route":"api/classes/router/RouteDataToken","fragment":"notes","content":"The generic type parameter is the key to guaranteed type-safety, and should always be defined."},{"breadcrumbs":["API References","router","RouteDataToken"],"pageType":"api","title":"RouteDataToken","section":"Constructor","route":"api/classes/router/RouteDataToken","fragment":"constructor","content":"Descriptive text for debugging purposes."},{"breadcrumbs":["API References","router","RouteDataToken"],"pageType":"api","title":"RouteDataToken","section":"Properties","route":"api/classes/router/RouteDataToken","fragment":"properties","content":"Property key that can be used to store and access the corresponding value of this token from an route's data object."},{"breadcrumbs":["API References","theming","RootElementStylePropertiesThemeTokenRegistry"],"pageType":"api","title":"RootElementStylePropertiesThemeTokenRegistry","section":"","route":"api/classes/theming/RootElementStylePropertiesThemeTokenRegistry","content":"Implementation of ThemeTokenRegistry that defines theme token and values as CSS variables on the root DOM element, usually the  element."},{"breadcrumbs":["API References","theming","RootElementStylePropertiesThemeTokenRegistry"],"pageType":"api","title":"RootElementStylePropertiesThemeTokenRegistry","section":"Notes","route":"api/classes/theming/RootElementStylePropertiesThemeTokenRegistry","fragment":"notes","content":"Token names can be optionally prefixed with --, e.g. --primary."},{"breadcrumbs":["API References","theming","RootElementStylePropertiesThemeTokenRegistry"],"pageType":"api","title":"RootElementStylePropertiesThemeTokenRegistry","section":"Methods","route":"api/classes/theming/RootElementStylePropertiesThemeTokenRegistry","fragment":"methods","content":"Deprecated"},{"breadcrumbs":["API References","theming","RootElementStylePropertiesThemeTokenRegistry"],"pageType":"api","title":"RootElementStylePropertiesThemeTokenRegistry","section":"Methods","route":"api/classes/theming/RootElementStylePropertiesThemeTokenRegistry","fragment":"methods","content":"prefer get"},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"","route":"api/interfaces/theming-material/SchemeBuilderConfig","content":"Configuration for SchemeBuilder."},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeBuilderConfig","fragment":"properties","content":"The contrast level of the color scheme. See SchemeContrastLevel for common values, or use a number between -1 to 1 for custom values, where -1 is the lowest contrast and 1 is the highest."},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeBuilderConfig","fragment":"properties","content":"The mode of the color scheme. Light or Dark."},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeBuilderConfig","fragment":"properties","content":"The source/seed color to use for creating the color scheme. The generated color scheme may deviate from this color at some extent, depending on the chrome of the source color and the algorithm used by the SchemeType."},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeBuilderConfig","fragment":"properties","content":"Hct is the color representation from material-color-utilities, which consists of hue, chroma, and tone."},{"breadcrumbs":["API References","theming-material","SchemeBuilderConfig"],"pageType":"api","title":"SchemeBuilderConfig","section":"Properties","route":"api/interfaces/theming-material/SchemeBuilderConfig","fragment":"properties","content":"The type of color scheme to generate. See SchemeType for details."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilder"],"pageType":"api","title":"SchemeStaticColorBuilder","section":"","route":"api/classes/theming-material/SchemeStaticColorBuilder","content":"Implementation of ThemeBuilder that generates hex color tokens for Material Design static colors (aka. custom colors)."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilder"],"pageType":"api","title":"SchemeStaticColorBuilder","section":"Notes","route":"api/classes/theming-material/SchemeStaticColorBuilder","fragment":"notes","content":"A static color consists of 4 roles. Suppose the name of the static color is \"success\", then there will be \"success\", \"on-success\", \"success-container\", and \"on-success-container\" roles."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilder"],"pageType":"api","title":"SchemeStaticColorBuilder","section":"Notes","route":"api/classes/theming-material/SchemeStaticColorBuilder","fragment":"notes","content":"A non-empty name must be assigned to this builder. The name assigned to this builder will be used as the prefix to the generated tokens. When the name is \"scheme\", the generated tokens will be \"scheme-success\", \"scheme-on-success\", etc."},{"breadcrumbs":["API References","theming-material","SchemeStaticColorBuilder"],"pageType":"api","title":"SchemeStaticColorBuilder","section":"Notes","route":"api/classes/theming-material/SchemeStaticColorBuilder","fragment":"notes","content":"When assigned the same name with SchemeBuilder, this builder can supplement additional static colors to the main color roles generated by SchemeBuilder."},{"breadcrumbs":["API References","endpoints","createEndpointsFactory"],"pageType":"api","title":"createEndpointsFactory","section":"","route":"api/functions/endpoints/createEndpointsFactory","content":"Convenience function that creates a factory function, which, once invoked within an InjectionContext or with dependencies supplied, returns a collection of endpoint functions."},{"breadcrumbs":["API References","endpoints","createEndpointsFactory"],"pageType":"api","title":"createEndpointsFactory","section":"Notes","route":"api/functions/endpoints/createEndpointsFactory","fragment":"notes","content":"Can be used as the factory function within Provider or InjectionToken declarations."},{"breadcrumbs":["API References","endpoints","createEndpointsFactory"],"pageType":"api","title":"createEndpointsFactory","section":"Parameters","route":"api/functions/endpoints/createEndpointsFactory","fragment":"parameters","content":"the declaration schema for the intended endpoint functions"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"-"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"an observable that:"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"starts loading the configuration file according to the given definitionemits the parsed configuration objectcompletes after its first emissioncancels the loading on unsubscribe before value emission"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"-"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"an observable that:"},{"breadcrumbs":["API References","config-files","ConfigFileLoader"],"pageType":"api","title":"ConfigFileLoader","section":"Methods","route":"api/classes/config-files/ConfigFileLoader","fragment":"methods","content":"starts loading the configuration file according to the given definitionemits the parsed configuration objectcompletes after its first emissioncancels the loading on unsubscribe before value emission"},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"In Angularity, JavaScript runtime errors are divided into two categories: Errors and Exceptions."},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"Exceptions are instances of the Exception class. They are expected to be caught and appropriately handled.Errors are all the errors that are not instances of Exception. They are regarded as critical errors that should never happen and typically breaks the application, such as TypeError. The occurrence of such an error implies something is wrong within the application that awaits fixes."},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"To create a type of exception, declare a class that extends from the Exception class."},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"Additional customizations can apply to add contextual properties or generate uniformed error messages:"},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"It is worthy to note that both Exceptions and Errors are instances of Error. The way to distinguish them is instanceof Exception, not instanceof Error."},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"A recommended way to compose the catch block is to exhaust all the exceptions that are expected to be caught and re-throw the error if none of the exceptions are matched:"},{"breadcrumbs":["Core","Exceptions"],"pageType":"guide","title":"Exceptions","section":"","route":"core/exception","content":"All Angularity libraries follow this convention for error handling, and it is recommended to also follow such convention in applications that uses Angularity."},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"","route":"api/classes/cdk-layout/NamedBreakpointObserver","content":"Higher level abstraction of BreakpointObserver from Angular CDK, allowing observing multiple named breakpoints."},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"Methods","route":"api/classes/cdk-layout/NamedBreakpointObserver","fragment":"methods","content":"Observes the given breakpoints and returns an observable map of their states."},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"Methods","route":"api/classes/cdk-layout/NamedBreakpointObserver","fragment":"methods","content":"The return type carries type information about the breakpoint names, allowing for type-safe access to the breakpoint states."},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"Methods","route":"api/classes/cdk-layout/NamedBreakpointObserver","fragment":"methods","content":"a map of breakpoint names and their corresponding queries"},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"Methods","route":"api/classes/cdk-layout/NamedBreakpointObserver","fragment":"methods","content":"-"},{"breadcrumbs":["API References","cdk / layout","NamedBreakpointObserver"],"pageType":"api","title":"NamedBreakpointObserver","section":"Methods","route":"api/classes/cdk-layout/NamedBreakpointObserver","fragment":"methods","content":"an Observable emitting the current state of each of the configured breakpoints."},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"","route":"api/interfaces/cdk-dialog/DialogFacade","content":"A facade interface useful for reactively interacting with a specific type of dialog within components, created by useDialog."},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"Properties","route":"api/interfaces/cdk-dialog/DialogFacade","fragment":"properties","content":"Signal containing a DialogRef if the dialog is launched and not disposed, or undefined otherwise."},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"Methods","route":"api/interfaces/cdk-dialog/DialogFacade","fragment":"methods","content":"Launch the dialog with configuration overrides"},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"Methods","route":"api/interfaces/cdk-dialog/DialogFacade","fragment":"methods","content":"configuration that will be shallow-merged with the default one."},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"Methods","route":"api/interfaces/cdk-dialog/DialogFacade","fragment":"methods","content":"-"},{"breadcrumbs":["API References","cdk / dialog","DialogFacade"],"pageType":"api","title":"DialogFacade","section":"Methods","route":"api/interfaces/cdk-dialog/DialogFacade","fragment":"methods","content":"a strictly typed DialogRef object"},{"breadcrumbs":["API References","cdk / dialog","useDialog"],"pageType":"api","title":"useDialog","section":"","route":"api/functions/cdk-dialog/useDialog","content":"Assembles a facade object for a specific dialog component type with optional default configurations, enabling a satisfying development experience working with Angular CDK dialogs."},{"breadcrumbs":["API References","cdk / dialog","useDialog"],"pageType":"api","title":"useDialog","section":"Returns","route":"api/functions/cdk-dialog/useDialog","fragment":"returns","content":"-"},{"breadcrumbs":["API References","cdk / dialog","useDialog"],"pageType":"api","title":"useDialog","section":"Returns","route":"api/functions/cdk-dialog/useDialog","fragment":"returns","content":"a DialogFacade object for the specified dialog component"},{"breadcrumbs":["API References","cdk / dialog","useDialog"],"pageType":"api","title":"useDialog","section":"Parameters","route":"api/functions/cdk-dialog/useDialog","fragment":"parameters","content":"dialog component class, extending DialogIoTypes"},{"breadcrumbs":["API References","cdk / dialog","useDialog"],"pageType":"api","title":"useDialog","section":"Parameters","route":"api/functions/cdk-dialog/useDialog","fragment":"parameters","content":"default configuration for the dialog"},{"breadcrumbs":["API References","router","readRouteData"],"pageType":"api","title":"readRouteData","section":"","route":"api/functions/router/readRouteData","content":"Read the current value of the given token from the data object of a route."},{"breadcrumbs":["API References","router","readRouteData"],"pageType":"api","title":"readRouteData","section":"Returns","route":"api/functions/router/readRouteData","fragment":"returns","content":"-"},{"breadcrumbs":["API References","router","readRouteData"],"pageType":"api","title":"readRouteData","section":"Returns","route":"api/functions/router/readRouteData","fragment":"returns","content":"the value, or undefined if such value is not defined"},{"breadcrumbs":["API References","router","readRouteData"],"pageType":"api","title":"readRouteData","section":"Parameters","route":"api/functions/router/readRouteData","fragment":"parameters","content":"the data object from ActivatedRoute or ActivatedRouteSnapshot"},{"breadcrumbs":["API References","router","readRouteData"],"pageType":"api","title":"readRouteData","section":"Parameters","route":"api/functions/router/readRouteData","fragment":"parameters","content":"the target token to retrieve value of"},{"breadcrumbs":["API References","router","useRouteData"],"pageType":"api","title":"useRouteData","section":"","route":"api/functions/router/useRouteData","content":"Retrieves the value of the given RouteDataToken from the current or deeper routes."},{"breadcrumbs":["API References","router","useRouteData"],"pageType":"api","title":"useRouteData","section":"Returns","route":"api/functions/router/useRouteData","fragment":"returns","content":"-"},{"breadcrumbs":["API References","router","useRouteData"],"pageType":"api","title":"useRouteData","section":"Returns","route":"api/functions/router/useRouteData","fragment":"returns","content":"signal of value of the given token, or null if such value is not defined. Navigation may change the value."},{"breadcrumbs":["API References","router","useRouteData"],"pageType":"api","title":"useRouteData","section":"Parameters","route":"api/functions/router/useRouteData","fragment":"parameters","content":"the target token to retrieve value of"},{"breadcrumbs":["API References","router","useRouteData"],"pageType":"api","title":"useRouteData","section":"Parameters","route":"api/functions/router/useRouteData","fragment":"parameters","content":"\"current\": retrieves from the ActivatedRoute; \"children\": retrieves"},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"Type Containers are widely used in Angularity for advanced type gymnastics."},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"A Type Container is an empty object but carries specific TypeScript type information, enabling infinite possibilities of advanced type inferences and manipulations."},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"The $type function produces a type container:"},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"Conventionally, type container variables are prefixed with a $ symbol."},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"To extract the type information from a type container, use the ContainedTypeOf type:"},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"A typical use case of type containers is to infer generics from a mix of tangible values and type containers:"},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"In comparison, without type containers, it is not possible to leverage the power of TypeScript generic inference, so all the generics have to be manually supplied:"},{"breadcrumbs":["Core","Type Container"],"pageType":"guide","title":"Type Container","section":"","route":"core/type-container","content":"Note that the string literal 'FetchBook' is repeated twice because of the lack of generic inference. When the generics are complicated, it could be impossible to manually supply all the generic, and that's when Type Containers come handy."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"","route":"api/interfaces/theming-material/TypescaleConfig","content":"Properties of a Material Typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Notes","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"notes","content":"A typescale is a selection of font styles that can be used across an app, ensuring a flexible, yet consistent, style that accommodates a range of purposes. See the specification for more details."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"CSS-compatible font families for this typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"CSS-compatible Line height for this typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"Name of this typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"CSS-compatible font size for this typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"CSS-compatible letter spacing for this typescale level."},{"breadcrumbs":["API References","theming-material","TypescaleConfig"],"pageType":"api","title":"TypescaleConfig","section":"Properties","route":"api/interfaces/theming-material/TypescaleConfig","fragment":"properties","content":"CSS-compatible font weight for this typescale level."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"","route":"api/functions/router/setupInjectionContextForLoadChildren","content":"Workaround to emulate an injection context in the route's loadChildren resolver."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Notes","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"notes","content":"This enables asynchronous providers for routes, allowing dynamically provide injectables based on external factors."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Notes","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"notes","content":"The Injector used for the injection context is usually the nearest EnvironmentInjector."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Notes","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"notes","content":"This function does not transform child routes. Invoke on each route that needs an injection context."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Returns","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"returns","content":"-"},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Returns","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"returns","content":"a new route config that can be used in replace of the given route config."},{"breadcrumbs":["API References","router","setupInjectionContextForLoadChildren"],"pageType":"api","title":"setupInjectionContextForLoadChildren","section":"Parameters","route":"api/functions/router/setupInjectionContextForLoadChildren","fragment":"parameters","content":"the route config where a injection context is needed for loadChildren"},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"","route":"api/functions/theming/withThemeBuilder","content":"Creates a token generation specification, which specifies the target ThemeBuilder and relevant configurations to be passed to the builder."},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Parameters","route":"api/functions/theming/withThemeBuilder","fragment":"parameters","content":"The name that will be passed to the theme builder."},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Parameters","route":"api/functions/theming/withThemeBuilder","fragment":"parameters","content":"The token that can be used to retrieve the theme builder"},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Parameters","route":"api/functions/theming/withThemeBuilder","fragment":"parameters","content":"The configuration object that will be passed to the theme builder."},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Usage Notes","route":"api/functions/theming/withThemeBuilder","fragment":"usage-notes","content":"A builder class can be passed to the builder parameter because constructor classes are valid tokens for dependency injection. It is worthy noting that you need to make sure that there is a provider for the token. This function does not register providers for the token."},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Usage Notes","route":"api/functions/theming/withThemeBuilder","fragment":"usage-notes","content":"An observable can be passed as the config parameter, in which case the theme is expected to be updated on every value emission."},{"breadcrumbs":["API References","theming","withThemeBuilder"],"pageType":"api","title":"withThemeBuilder","section":"Usage Notes","route":"api/functions/theming/withThemeBuilder","fragment":"usage-notes","content":"In order to gain access to the injection context, use the defer RxJS operator, which defers the invocation of the observable factory until the observable is subscribed during the environment initialization, where an injection context is available."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"","route":"api/classes/theming/ThemeManager","content":"Facade-level service that is responsible for high-level theme operations."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Notes","route":"api/classes/theming/ThemeManager","fragment":"notes","content":"This service is provided in root by default."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"Apply the given theme tokens to the application to make them take effect."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"Previously applied tokens will not be cleared when applying new tokens. New tokens will overwrite the previous ones when the token names conflict."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"Resolves a list of token generation specifications into a single object of merged theme tokens."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"Specifications are resolved in order, and tokens generated from later specifications will overwrite the previous ones when the token names conflict."},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"theme token generation specifications"},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"-"},{"breadcrumbs":["API References","theming","ThemeManager"],"pageType":"api","title":"ThemeManager","section":"Methods","route":"api/classes/theming/ThemeManager","fragment":"methods","content":"generated theme tokens from all the specifications, merged into a single object."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"","route":"api/classes/endpoints/EndpointInvoker","content":"Service responsible for endpoint invoking. All endpoints must be invoked through this service."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Notes","route":"api/classes/endpoints/EndpointInvoker","fragment":"notes","content":"This service is abstract, with a default implementation HttpClientEndpointInvoker."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"Invokes an API endpoint as specified in the provided configuration."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"contains all information for endpoint invoking."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"-"},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"observable response from the endpoint"},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"Invokes an API endpoint as specified in the provided configuration."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"contains all information for endpoint invoking."},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"-"},{"breadcrumbs":["API References","endpoints","EndpointInvoker"],"pageType":"api","title":"EndpointInvoker","section":"Methods","route":"api/classes/endpoints/EndpointInvoker","fragment":"methods","content":"observable response from the endpoint"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"","route":"api/classes/theming/ThemeTokenRegistry","content":"Registry for active theme tokens in the current application."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Notes","route":"api/classes/theming/ThemeTokenRegistry","fragment":"notes","content":"This is an abstract service with a default implementation RootElementStylePropertiesThemeTokenRegistry."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"Retrieve the value of a theme token."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the name of the theme token"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"-"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the value if registered, or null if not found"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"Retrieve the value of a theme token."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the name of the theme token"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"-"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the value if registered, or null if not found"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"Define a new value for a theme token. Duplicate defines overwrite the previous value."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the name of the theme token"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"new value for the theme token"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"Define a new value for a theme token. Duplicate defines overwrite the previous value."},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"the name of the theme token"},{"breadcrumbs":["API References","theming","ThemeTokenRegistry"],"pageType":"api","title":"ThemeTokenRegistry","section":"Methods","route":"api/classes/theming/ThemeTokenRegistry","fragment":"methods","content":"new value for the theme token"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"In Angular, object literals are used to declare injectables of an injection context:"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"However, although the ProviderToken already carries type information, the object literals cannot perform type checks to ensure type-safety, requiring the developer to manually make sure that the provided value is valid."},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"In the snippet above, the developer:"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"Must make sure "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"SuffixedTitleStrategy"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":" correctly implements "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"TitleStrategy"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"."},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"Must use the "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"satisfies"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":" keyword to manually restrict the type of the provider of "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"DIALOG_GLOBAL_CONFIG"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"."},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"Cannot appropriately type the "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"APP_INITIALIZER"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":" since there is no such "},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"AppInitializer"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":" type exported."},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"As a solution, Angularity offers provide and provideMulti as helper functions for type-safe provider declarations:"},{"breadcrumbs":["Core","Type-safe Providing"],"pageType":"guide","title":"Type-safe Providing","section":"","route":"core/type-safe-providing","content":"In the example above, all the providers' types are automatically inferred and restricted from the token. By elevating the multi option to the function name, it also helps prevent the developer from forgetting the multi option."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"","route":"api/classes/cdk-dialog/AnimationAwareDialog","content":"Tweaked version of the Dialog service from Angular CDK that supports leaving animations by waiting for animations to complete before disposing the overlay."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Properties","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"properties","content":"Stream that emits when all open dialog have finished closing. Will emit on subscribe if there are no open dialogs to begin with."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Accessors","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"accessors","content":"Stream that emits when a dialog has been opened."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Accessors","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"accessors","content":"Keeps track of the currently-open dialogs."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Closes all of the currently-open dialogs."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Closes all of the currently-open dialogs."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Finds an open dialog by its id."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"ID to use when looking up the dialog."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Finds an open dialog by its id."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"ID to use when looking up the dialog."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Opens a modal dialog containing the given component."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Extra configuration options."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"-"},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Methods","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"methods","content":"Reference to the newly-opened dialog."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Usage Notes","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"usage-notes","content":"Currently, when closing a dialog, the corresponding overlay is immediately disposed, which means that the host element of the overlay is immediately removed from the DOM using the native API."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Usage Notes","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"usage-notes","content":"The current behavior completely eliminated the possibility to implement a :leave animation for dialogs, since the ancestor element of the dialog, the overlay, is removed via the native DOM API, and the Angular animation engine cannot hook into this process to perform the :leave animation."},{"breadcrumbs":["API References","cdk / dialog","AnimationAwareDialog"],"pageType":"api","title":"AnimationAwareDialog","section":"Usage Notes","route":"api/classes/cdk-dialog/AnimationAwareDialog","fragment":"usage-notes","content":"This class works around the issue by waiting :leave animations to complete before disposing the overlay."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Static Properties","route":"api/classes/command-flow/CommandBus","fragment":"static-properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Static Properties","route":"api/classes/command-flow/CommandBus","fragment":"static-properties","content":"Use new Observable() instead. Will be removed in v8."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Static Properties","route":"api/classes/command-flow/CommandBus","fragment":"static-properties","content":"Creates a new Observable by calling the Observable constructor"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Properties","route":"api/classes/command-flow/CommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Properties","route":"api/classes/command-flow/CommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Properties","route":"api/classes/command-flow/CommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Properties","route":"api/classes/command-flow/CommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Methods","route":"api/classes/command-flow/CommandBus","fragment":"methods","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Methods","route":"api/classes/command-flow/CommandBus","fragment":"methods","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"a constructor function used to instantiate the Promise"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Internal implementation detail, do not use directly. Will be made internal in v8. If you have implemented an operator using lift, it is recommended that you create an operator by simply returning new Observable() directly. See \"Creating new operators from scratch\" section here: https://rxjs.dev/guide/operators"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Creates a new Observable, with this Observable instance as the source, and the passed operator defined as the new observable's operator."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"the operator defining the operation to take on the observable"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Creates a new Observable, with this Observable instance as the source, and the passed operator defined as the new observable's operator."},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"the operator defining the operation to take on the observable"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandBus"],"pageType":"api","title":"CommandBus","section":"Example","route":"api/classes/command-flow/CommandBus","fragment":"example-1","content":"Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Static Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"static-properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Static Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"static-properties","content":"Use new Observable() instead. Will be removed in v8."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Static Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"static-properties","content":"Creates a new Observable by calling the Observable constructor"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Properties","route":"api/classes/command-flow/CommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Methods","route":"api/classes/command-flow/CommandEventBus","fragment":"methods","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Methods","route":"api/classes/command-flow/CommandEventBus","fragment":"methods","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"a constructor function used to instantiate the Promise"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Internal implementation detail, do not use directly. Will be made internal in v8. If you have implemented an operator using lift, it is recommended that you create an operator by simply returning new Observable() directly. See \"Creating new operators from scratch\" section here: https://rxjs.dev/guide/operators"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Creates a new Observable, with this Observable instance as the source, and the passed operator defined as the new observable's operator."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"the operator defining the operation to take on the observable"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Creates a new Observable, with this Observable instance as the source, and the passed operator defined as the new observable's operator."},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"the operator defining the operation to take on the observable"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","CommandEventBus"],"pageType":"api","title":"CommandEventBus","section":"Example","route":"api/classes/command-flow/CommandEventBus","fragment":"example-1","content":"Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"static-properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"static-properties","content":"Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"static-properties","content":"Creates a \"subject\" by basically gluing an observer to an observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"methods","content":"Creates a new Observable with this Subject as the source. You can do this to create custom Observer-side logic of the Subject and conceal it from code that uses the Observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"methods","content":"Creates a new Observable with this Subject as the source. You can do this to create custom Observer-side logic of the Subject and conceal it from code that uses the Observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"methods","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"methods","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"a constructor function used to instantiate the Promise"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandEventBus"],"pageType":"api","title":"SubjectBasedCommandEventBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandEventBus","fragment":"example-1","content":"Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"static-properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"static-properties","content":"Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Static Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"static-properties","content":"Creates a \"subject\" by basically gluing an observer to an observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Properties","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"properties","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"methods","content":"Creates a new Observable with this Subject as the source. You can do this to create custom Observer-side logic of the Subject and conceal it from code that uses the Observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"methods","content":"Creates a new Observable with this Subject as the source. You can do this to create custom Observer-side logic of the Subject and conceal it from code that uses the Observable."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"methods","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Methods","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"methods","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example","content":"Used as a NON-CANCELLABLE means of subscribing to an observable, for use with APIs that expect promises, like async/await. You cannot unsubscribe from this."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example","content":"WARNING: Only use this with observables you know will complete. If the source observable does not complete, you will end up with a promise that is hung up, and potentially all of the state of an async function hanging out in memory. To avoid this situation, look into adding something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil} amongst others."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"a handler for each value emitted by the observable"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"a constructor function used to instantiate the Promise"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"Internal implementation detail, do not use directly. Will be made internal in v8."},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"Deprecated"},{"breadcrumbs":["API References","command-flow","SubjectBasedCommandBus"],"pageType":"api","title":"SubjectBasedCommandBus","section":"Example","route":"api/classes/command-flow/SubjectBasedCommandBus","fragment":"example-1","content":"Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise"}]